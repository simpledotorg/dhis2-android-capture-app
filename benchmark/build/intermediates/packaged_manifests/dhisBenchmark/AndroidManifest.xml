<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="org.dhis2.benchmark" >

    <uses-sdk
        android:minSdkVersion="23"
        android:targetSdkVersion="33" />

    <instrumentation
        android:name="androidx.test.runner.AndroidJUnitRunner"
        android:functionalTest="false"
        android:handleProfiling="false"
        android:label="Tests for org.dhis2.benchmark"
        android:targetPackage="org.dhis2.benchmark" />

    <!--
    QUERY_ALL_PACKAGES is used to enable macrobenchmarks to read package information from
    potential target packages, e.g. for querying debuggable, profileable, or default launch intent.

    This could also be done by making each macrobenchmark specify a <queries/> tag, with the
    target package, but this removes the need for documenting that setup step, and detecting
    misconfiguration.
    -->
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES" />
    <!--
    This is needed to write benchmark report data to an external directory during instrumented
    tests to allow the accompanying androidx.benchmark gradle plugin to pull the reports onto host
     machine after the tests are done running.
    -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.REORDER_TASKS" />

    <queries>
        <package android:name="androidx.test.orchestrator" />
        <package android:name="androidx.test.services" />
        <package android:name="com.google.android.apps.common.testing.services" />
    </queries>

    <application
        android:debuggable="true"
        android:extractNativeLibs="false" >
        <uses-library android:name="android.test.runner" />
        <!-- Activity used to block background content while benchmarks are running -->
        <activity
            android:name="androidx.benchmark.IsolationActivity"
            android:exported="true"
            android:theme="@android:style/Theme.Light.NoTitleBar.Fullscreen" >
        </activity>
        <activity
            android:name="androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity"
            android:exported="true"
            android:theme="@style/WhiteBackgroundTheme" >
            <intent-filter android:priority="-100" >
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity"
            android:exported="true"
            android:theme="@style/WhiteBackgroundTheme" >
            <intent-filter android:priority="-100" >
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity"
            android:exported="true"
            android:theme="@style/WhiteBackgroundDialogTheme" >
            <intent-filter android:priority="-100" >
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="org.dhis2.benchmark.androidx-startup"
            android:exported="false" >
            <meta-data
                android:name="androidx.profileinstaller.ProfileInstallerInitializer"
                android:value="androidx.startup" />
        </provider>

        <receiver
            android:name="androidx.profileinstaller.ProfileInstallReceiver"
            android:directBootAware="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.DUMP" >
            <intent-filter>
                <action android:name="androidx.profileinstaller.action.INSTALL_PROFILE" />
            </intent-filter>
        </receiver>
    </application>

</manifest>